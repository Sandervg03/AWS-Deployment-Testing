name: Deploy Lambda Functions

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Root npm install
        run: npm ci
        env:
          CI: true

      - name: Ensure no function-level package.json files exist
        run: |
          echo "Checking for disallowed package.json in function directories..."
          if find functions -type f -name "package.json" | grep -q .; then
            echo "::error ::Function-level package.json files are not allowed. Use the root package.json instead."
            exit 1
          fi

      - name: Run tests
        run: npm run test

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION || 'eu-north-1' }}

      - name: Root npm install
        run: npm ci
        env:
          CI: true

      - name: Get changed files
        id: changed-files
        run: |
          DEFAULT_BRANCH=$(git remote show origin | grep "HEAD branch" | sed 's/.*: //')
          echo "Default branch: $DEFAULT_BRANCH"

          CHANGED_FILES=$(git diff --name-only origin/$DEFAULT_BRANCH...HEAD)
          echo "Changed files: $CHANGED_FILES"
          echo "CHANGED_FILES<<EOF" >> $GITHUB_ENV
          echo "$CHANGED_FILES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Find and deploy modified Lambda functions
        run: |
          for func_dir in functions/*/; do
            FUNC_NAME=$(basename $func_dir)
            echo "Checking function: $FUNC_NAME"

            FUNC_CHANGED=$(echo "$CHANGED_FILES" | grep -q "^functions/$FUNC_NAME/" && echo "true" || echo "false")
            TEST_CHANGED=$(echo "$CHANGED_FILES" | grep -q "^test/$FUNC_NAME/" && echo "true" || echo "false")
            ROOT_CHANGED=$(echo "$CHANGED_FILES" | grep -q "^package.json\|^package-lock.json\|^yarn.lock" && echo "true" || echo "false")

            if [[ "$FUNC_CHANGED" == "true" || "$TEST_CHANGED" == "true" || "$ROOT_CHANGED" == "true" ]]; then
              echo "Changes detected for $FUNC_NAME – deploying..."

              cd functions/$FUNC_NAME

              LAMBDA_FUNC_NAME=$(node -e "console.log(require('./metadata.json').functionName)")
              if [ -z "$LAMBDA_FUNC_NAME" ]; then
                LAMBDA_FUNC_NAME=$FUNC_NAME
              fi

              echo "Deploying $LAMBDA_FUNC_NAME to AWS Lambda..."

              zip -r deploy.zip . -x "*.git*" "node_modules/*/test/*" "node_modules/*/docs/*"
              aws lambda update-function-code --function-name=$LAMBDA_FUNC_NAME --zip-file=fileb://deploy.zip
              rm deploy.zip

              cd $GITHUB_WORKSPACE
            else
              echo "No changes detected for $FUNC_NAME – skipping deployment."
            fi
          done
